
- create product-pulse-client (install basics packages)
- create product-pulse-server (install basics packages)
- create .env on server and .env.local on client with .*-examples for future reference
- create folder structures on client (base)
- add firebase credentials on client on .env.local
- create routes, home page, error page
- create main and dashboard layout
- create website container (max width 1280) & off react/prop-types
- create navbar & footer on client
- create products, login & register page
- install react-helmet-async and set it on main.jsx
- create wireframe of navbar & footer
- create dashboard layout
- add all routes (normaluser, moderator, admin)
- create dashboard routes in Routes.jsx
- add active route functionality on dashboard
- select color pallate for entire website "primaryColor: blue"
- design navbar with primary color
- break down all sections of home page & product page
- create login and register page static
- install and implement react-hot-toast
- implement login & register functionality
- implement logout functionality on navbar dropdown
- remove login from navbar on successful login and display dropdown
- create 3 users, normal, moderator, admin(by changing database)
-* todo: login & registration form validation
- create privateRoute (with state redirect)
- loggedin user can't access login/register page
- implement logged out feature on dashboard
- create useAxiosSecure and useAxiosPublic hook
- save signup and google signin user in database
- set jwt using localstorage
- set mongodb credentials in server index.js
- create useRole hook and display menu according to the userRole
- create users table html & css (admin - manage users)
- create a hook useAllUsers and fetch all users using tanstack
- display dynamic users on (admin - manage users page)
- implement make moderator and make admin functinality (admin - manage users page)
-* todo: filter, pagination [optonal]
- design profile page - (normal, admin, moderator)
- hide subscription button for (moderator & admin)
- design coupon page - (admin - manage coupons)
- create a hooks useAllCoupons
-* todo: form validation (add new coupon, edit coupon)
-* todo: admin can't change his role (hide loggedin admin) [admin - user management]
- design html & css for add new product (normal - add new product)
- create a hook to save image on imgbb
- add functionality of add new product and save it on database (normal - add new product)
- manage added product (edit, delete, update)
- review products (moderator - review products)
-* todo: one user can't add more than one product without subscription
- implement credit card payment using stripe
-* todo: coupon system on payment modal/new page
